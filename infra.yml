version: '3.2'

services:
  proxy:
    image: traefik:v2.8
    command:
      - '--providers.docker=true'
      - '--experimental.http3=true'
      - '--entryPoints.web.address=:80'
      - '--entryPoints.websecure.address=:443'
      - '--entryPoints.websecure.http3.advertisedPort=443'
      - '--entryPoints.metrics.address=:8082'
      - '--providers.providersThrottleDuration=2s'
      - '--providers.docker.watch=true'
      - '--providers.docker.swarmMode=true'
      - '--providers.docker.swarmModeRefreshSeconds=15s'
      - '--providers.docker.exposedbydefault=false'
      - '--accessLog.bufferingSize=0'
      - '--api=true'
      - '--api.dashboard=true'
      - '--ping.entryPoint=web'
      - '--certificatesresolvers.myresolver.acme.email=' # add your email here
      - '--certificatesresolvers.myresolver.acme.storage=acme.json'
      - '--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web'
      - '--log.level=DEBUG'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - /opt/storage/infra/traefik/acme.json:/acme.json  # change this to your mountpoint on the disk. it must exist!
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: udp
        mode: host
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik
        - traefik.http.routers.dashboard.tls=true
        - traefik.http.routers.dashboard.tls.certresolver=myresolver
        - traefik.http.routers.dashboard.rule=Host(`traefik.yourdomain.com`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`)) # change to your domain
        - traefik.http.routers.dashboard.service=api@internal
        - traefik.http.routers.dashboard.entrypoints=websecure
        - traefik.http.routers.dashboard.middlewares=my-basic-auth
        - traefik.http.middlewares.my-basic-auth.basicauth.users=traefik:$$apr1$$faywe79g$$z8/DCrAWw5r8U3wLHc1Ib/ # this pw is "changeme". but you should replace it. note that you need to have the $$ double here for this to work
        - traefik.http.middlewares.https_redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https_redirect.redirectscheme.permanent=true
        - traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)
        - traefik.http.routers.http_catchall.entrypoints=web
        - traefik.http.routers.http_catchall.middlewares=https_redirect
      #placement:
      #  constraints: [node.labels.designation == infra] # uncomment after adding a lable to your server to make sure it always gets deployed where your physical files are
    networks:
      - traefik

  agent:
    image: portainer/agent:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - /opt/storage/infra/portainer:/data # change this to your mountpoint on the disk. it must exist!
    networks:
      - agent_network
      - traefik
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.services.portainer.loadbalancer.server.port=9000
        - traefik.http.routers.portainer.tls=true
        - traefik.http.routers.portainer.tls.certresolver=myresolver
        - traefik.http.routers.portainer.rule=Host(`portainer.yourdomain.com`) # change to your domain
        - traefik.http.routers.portainer.service=portainer
        - traefik.http.routers.portainer.entrypoints=websecure
        - traefik.docker.network=traefik
      mode: replicated
      replicas: 1
      #placement:
      #  constraints: [node.labels.designation == infra] # uncomment after adding a lable to your server to make sure it always gets deployed where your physical files are

networks:
  agent_network:
    driver: overlay
    attachable: true
  traefik:
    external: true
